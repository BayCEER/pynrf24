{"name":"Pynrf24","tagline":"Python port of the RF24 library for NRF24L01+ radios","body":"pynrf24\r\n=======\r\n\r\nPython port of the RF24 (https://github.com/maniacbug/RF24/) library for NRF24L01+ radios, adapted for the BeagleBone Black and the Raspberry Pi.\r\n\r\nAll methods were ported and most methods prototypes were kept similar. This should facilitate the adaptation of existing code.\r\nLimitations were also ported and unfortunately some bugs may have been introduced.\r\n\r\nFor more information regarding how to use this library, check the RF24 documentation: http://maniacbug.github.io/RF24/\r\nMost of the information there will also be valid to this library.\r\n\r\nTested in a BeagleBoneBlack using spi0 and NRF24L01+ radios.\r\nShould work without problems in a Raspberry Pi or with NRF24L01 (non +) radios.\r\n\r\nDo not forget to check this [great tutorial](http://www.diyembedded.com/tutorials/nrf24l01_0/nrf24l01_tutorial_0.pdf)\r\nor the [original datasheet](http://www.nordicsemi.com/eng/Products/2.4GHz-RF/nRF24L01)\r\n\r\n\r\nContact\r\n-------\r\n\r\nFor any information regarding this library you can contact me at jpbarraca at gmail.\r\n\r\nImprovements to the code base are also welcome.\r\n\r\nRequirements\r\n------------\r\n\r\n * Python 2\r\n * SPI Enabled on the device: check the spi directory in the repository\r\n * SPI communication requires spidev:  https://pypi.python.org/pypi/spidev\r\n * BBB: GPIO access requires Adafruit BBIO library: https://github.com/adafruit/adafruit-beaglebone-io-python\r\n * BBB: If using GPIO IRQ detection, a custom version of the Adafruit library must be used https://github.com/jpbarraca/adafruit-beaglebone-io-python . A patch was already submitted to Adafruit.\r\n \r\n\r\nWiring\r\n------\r\n\r\n    nRF24L01+ (top view)     BeagleBoneBlack\r\n\t+-+-+                    (header)\r\n\t|8|7|\t1: GND      ->   P9 GND (P9_1 and P9_2)\r\n\t+-+-+\t2: 3.3V     ->   P9 3.3v (P9_3 and P9_4)\r\n\t|6|5|\t3: CE       ->   P9_15 (configurable)\r\n\t+-+-+\t4: CSN      ->   SPI0.CS (P9_17)\r\n\t|4|3|\t5: SCKL     ->   SPI0.SCLK (P9_22)\r\n\t+-+-+\t6: MOSI     ->   SPI0.D1 (P9_18)\r\n\t|2|1|\t7: MISO     ->   SPI0.D0 (P9_21)\r\n\t+-+-+\t8: IRQ      ->   P9_16 (configurable)\r\n\r\nExamples\r\n--------\r\n\r\nInitialization:\r\n\r\n\t\tpipes = [ [0xe7, 0xe7, 0xe7, 0xe7, 0xe7], [0xc2, 0xc2, 0xc2, 0xc2, 0xc2] ]\r\n\r\n\t\tradio = NRF24()\r\n\t\tradio.begin(1,0,\"P9_15\", \"P9_16\") #Set CE and IRQ pins\r\n\t\tradio.setRetries(15,15)\r\n\t\tradio.setPayloadSize(8)\r\n\t\tradio.setChannel(0x60)\r\n\t\tradio.setDataRate(NRF24.BR_250KBPS)\r\n\t\tradio.setPALevel(NRF24.PA_MAX)\r\n\t\tradio.openWritingPipe(pipes[0])\r\n\t\tradio.openReadingPipe(1,pipes[1])\r\n\r\n\t\tradio.printDetails()\r\n\r\n\r\nSending Data:\r\n\r\n    buffer = ['H','E','L','L','O']\r\n    status = radio.write(buffer)\r\n\r\n\r\nReceiving Data:\r\n\r\n\t#Wait for data\r\n\tpipe =[0]\r\n\twhile not radio.available(pipe):\r\n\t\ttime.sleep(10000/1000000.0)\r\n\r\n\t#Receive Data\r\n\trecv_buffer = []\r\n    radio.read(recv_buffer)\r\n\r\n\t#Print the buffer\r\n\tprint recv_buffer\r\n\r\n\r\nCaveats\r\n-------\r\n\r\nPerformance with this driver (as well as with any other Python \"driver\") may be lower than expected.\r\nPython is a high level language and there is too much stuff going on (e.g, Garbage Collection)\r\nfor timing constrains to be respected. There is no assurance that you can transmit at 2MBits/s,\r\nor even at 250KBits/s. Actually, the hardware can only provide maximum bitrates\r\nwhen using large packets, no CRC, and without any retransmissions. Which means that radios must\r\nbe very close to each other, and in practice you will never get the advertised bitrate. Actually,\r\nmaybe Python actually isn't a bottleneck :).\r\n\r\nIt works great in my case. Use AS-IS, but remember that YMMV.\r\n\r\n\r\nLicense\r\n-------\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}